<!doctype html>
<html>
<head>
<title>Keyboard Viewer/editor</title>
<!-- 
PUBLIC DOMAIN, NO COPYRIGHTS, NO PATENTS.
-->
<script id = "bytecodeScript">
/*
 01040:0333
01041:0333,0336,0336,0332,0332,0332,0330,0336,0331,0336,0341,0330,0330,0330,0337,0337,0337,0342,0336,0336,0336,0331,0331,0331,0331,0331,0337,0337,0333,0337,0337
01042:0333,0330,0336,0332,0336,0332,0331,0342,0333,0342,0333,0330,0337,0337,0331
01043:0333,0336,0336,0332,0332,0332,0333,0336,0332,0337,0337,0337,0342,0336,0336,0333,0337,0337,0342,0336,0336,0332,0332,0336,0332,0330,0330,0330,0335,0337,0337,0337,0342,0336,0336,0336,0332,0332,0337,0337,0337,0342,0336,0336,0336,0332,0332,0332,0337,0337,0337,0330,0334,0331
01044:0333,0336,0330,0332,0336,0330,0350,0335,0335,0334,0350,0343,0334,0334,0343,0334,0334,0343,0334,0334,0343,0334,0334,0343,0334,0334,0330,0330,0343,0335,0335,0343,0335,0335,0334,0334,0334,0334,0334,0334,0343,0334,0334,0343,0334,0334,0343,0334,0334,0343,0335,0335,0335,0335,0335,0335,0335,0335,0351,0351,0330,0335,0335,0333,0333,0337,0337,0336,0332,0337,0342,0336,0333,0337
01045:0336,0333,0330,0336,0332,0330,0335,0335,0366,0335,0332,0332,0331,0367,0335,0335,0366,0335,0335,0334,0332,0331,0331,0334,0336,0331,0337,0367,0336,0335,0335,0366,0332,0332,0334,0333,0337,0336,0334,0334,0367,0337,0335,0335,0201,0336,0342,0335,0335,0331,0331,0333,0333,0333,0333,0337,0337,0337,
01046:0333,0336,0332,0330,0336,0330,0341,0331,0334,0350,0334,0342,0334,0330,0343,0335,0335,0343,0334,0334,0334,0334,0334,0334,0351,0333,0350,0334,0342,0335,0335,0335,0335,0342,0334,0334,0336,0342,0334,0351,0331,0331,0333,0333,0337,0337,0337
01047:0333,0336,0330,0332,0336,0330,0342,0333,0333,0331,0331,0331,0337,0337
01050:0333,0336,0330,0334,0331,0331,0337,0337,0350,0350,0350,0343,0350,0334,0334,0343,0335,0335,0335,0335,0335,0343,0334,0334,0334,0351,0351,0351,0351,0336,0330,0335,0336,0332,0331,0337
01051:0333,0336,0330,0335,0337,0331,0331,0337,0350,0350,0350,0343,0350,0334,0334,0343,0335,0335,0335,0335,0343,0334,0334,0351,0351,0351,0351,0330,0335,0335,0335,0336,0336,0331,0336,0333,0337,0337
01052:0333,0336,0332,0330,0352,0342,0335,0335,0342,0335,0335,0342,0335,0335,0342,0335,0335,0342,0335,0335,0342,0335,0335,0353,0331,0333,0337
01053:0333,0336,0330,0332,0336,0342,0335,0342,0335,0342,0335,0342,0335,0331,0331,0333,0333,0337,0337
01054:0333,0336,0332,0336,0334,0350,0334,0342,0335,0351,0335,0333,0337,0337
01055:0333,0336,0330,0332,0335,0336,0342,0331,0342,0333,0333,0330,0330,0330,0334,0337,0337
01056:0333,0336,0332,0336,0336,0341,0333,0333,0333,0337,0337,0337
01057:0333,0332,0350,0335,0310,0337,0342,0336,0313,0334,0351,0333
01060:0313,0304,0336,0336,0330,0333,0330,0330,0343,0331,0331,0334,0334,0343,0332,0334,0334,0337,0342,0332,0342,0336,0331,0337,0337,0350,0350,0335,0350,0350,0335,0350,0334,0311,0337,0310,0336,0342,0337,0311,0336,0335,0351,0334,0351,0351,0334,0304,0333,0336,0336,0332,0337,0337,0313,
01061:0304,0313,0335,0336,0342,0336,0330,0334,0337,0337,0342,0330,0334,0350,0334,0336,0336,0310,0337,0342,0336,0313,0335,0351,0335,0337,0331,0331,0333,0336,0336,0332,0337,0337,0337
01062:0304,0336,0335,0342,0350,0334,0366,0333,0334,0330,0304,0335,0335,0336,0336,0331,0337,0367,0335,0335,0310,0337,0366,0336,0332,0332,0337,0367,0336,0333,0333,0331,0331,0313,0337,0337,0336,0336,0336,0331,0337,0337,0337,0336,0336,0336,0333,0337,0337,0337
01063:0313,0304,0336,0336,0330,0333,0335,0343,0332,0332,0343,0334,0350,0343,0331,0331,0335,0335,0335,0335,0343,0330,0334,0334,0334,0334,0304,0333,0336,0333,0337,0337,0337
01064:0333,0336,0332,0337,0342,0336,0330,0334,0342,0330,0335,0350,0335,0342,0334,0351,0331,0337,0336,0333,0336,0333,0337,0337
01065:0313,0304,0336,0336,0330,0333,0335,0343,0335,0335,0350,0334,0350,0334,0343,0334,0351,0351,0331,0331,0331,0334,0342,0335,0335,0342,0330,0334,0342,0330,0342,0330,0334,0342,0330,0333,0333,0334,0333,0336,0333,0337,0337,0337
01066:0304,0313,0336,0336,0332,0337,0337,0333,0336,0336,0332,0332,0330,0341,0332,0350,0350,0335,0337,0337,0342,0336,0336,0334,0351,0351,0333,0333,0333,0331,0336,0332,0337,0337,0337
01067:0336,0332,0336,0336,0333,0337,0337,0337,0333,0336,0332,0350,0350,0335,0337,0342,0330,0334,0334,0334,0334,0334,0336,0342,0351,0351,0335,0350,0350,0335,0337,0331,0334,0351,0351,0336,0333,0337
01070:0304,0313,0336,0336,0336,0332,0332,0337,0337,0337,0333,0336,0332,0336,0330,0341,0330,0330,0341,0333,0333,0331,0331,0331,0336,0332,0337,0337,0337
01071:0304,0313,0336,0336,0332,0337,0337,0333,0336,0336,0332,0337,0337,0342,0336,0330,0336,0330,0332,0341,0333,0333,0330,0337,0337,0331
01072:0333,0336,0332,0330,0336,0336,0336,0341,0331,0331,0331,0331,0331,0331,0331,0341,0333,0333,0333,0333,0331,0337,0337,0337,0337
01073:0333,0336,0332,0330,0336,0336,0336,0341,0331,0331,0331,0331,0334,0334,0337,0337,0350,0335,0342,0335,0351,0335,0331,0333,0337,0337
01074:0333,0336,0330,0332,0350,0335,0342,0335,0335,0342,0335,0351,0330,0335,0335,0333,0337
01075:0333,0336,0336,0332,0330,0334,0337,0342,0336,0333,0337,0342,0336,0332,0332,0335,0333,0337,0337
01076:0333,0336,0330,0332,0350,0334,0342,0334,0334,0342,0335,0335,0335,0351,0331,0333,0337,
01077:0333,0336,0336,0332,0332,0330,0336,0331,0341,0330,0330,0342,0330,0330,0330,0343,0335,0335,0350,0334,0343,0335,0351,0330,0342,0335,0335,0337,0331,0331,0331,0336,0330,0333,0333,0333,0337,0337,0337
01100:0333,0336,0332,0330,0336,0336,0341,0337,0343,0334,0343,0334,0334,0336,0330,0342,0331,0337,0350,0335,0335,0343,0351,0330,0330,0335,0335,0333,0333,0337,0337
01101:0304,0313,0311,0305,0350,0350,0335,0342,0351,0335,0336,0333,0334,0334,0337,0342,0336,0336,0330,0334,0334,0342,0335,0335,0331,0350,0335,0337,0337,0304,0313,0336,0336,0336,0333,0337,0337,0337
01102:0304,0313,0336,0336,0336,0333,0337,0337,0337,0342,0330,0335,0336,0336,0342,0333,0333,0342,0332,0330,0343,0333,0333,0343,0333,0331,0342,0334,0337,0333,0336,0336,0333,0337,0337,0337,0304,0313
01103:0333,0336,0330,0332,0334,0343,0335,0335,0350,0334,0334,0343,0335,0335,0335,0335,0343,0351,0330,0335,0335,0333,0337,0304,0313
01104:0333,0332,0342,0336,0330,0350,0335,0343,0335,0335,0343,0335,0351,0330,0335,0335,0336,0333,0337,0333,0337,0304,0313
01105:0304,0313,0333,0336,0332,0336,0332,0332,0337,0337,0342,0335,0336,0342,0332,0336,0342,0337,0332,0342,0336,0331,0334,0337,0337,0333,0331,0304,0313
01106:0304,0313,0333,0336,0332,0336,0332,0332,0337,0337,0342,0335,0336,0332,0336,0342,0337,0332,0342,0336,0331,0334,0337,0337,0333,0331,0304,0313
01107:0304,0313,0333,0336,0330,0332,0334,0343,0335,0335,0350,0334,0334,0343,0335,0335,0335,0335,0343,0351,0330,0335,0335,0333,0337,0336,0336,0332,0336,0333,0337,0342,0330,0334,0342,0335,0331,0333,0337,0337,0304,0313
01110:0304,0313,0333,0336,0336,0332,0332,0337,0337,0342,0336,0332,0337,0342,0336,0330,0335,0342,0330,0334,0331,0336,0333,0337,0337,0304,0313
01111:0304,0313,0333,0336,0336,0332,0332,0334,0337,0342,0336,0330,0335,0337,0337,0342,0330,0336,0336,0334,0342,0335,0335,0342,0330,0330,0334,0337,0337,0331
01112:0304,0313,0333,0336,0330,0332,0342,0330,0335,0336,0342,0334,0334,0342,0334,0330,0330,0342,0330,0333,0343,0335,0335,0333,0331,0333,0336,0333,0337,0337,0337
01113:0304,0313,0333,0336,0332,0332,0337,0342,0336,0330,0350,0335,0310,0337,0342,0336,0313,0335,0335,0310,0337,0342,0336,0313,0335,0351,0330,0335,0335,0333,0337,0304,0313,0336,0336,0336,0333,0337,0337,0337
01114:0333,0336,0332,0336,0332,0337,0337,0342,0336,0335,0342,0330,0336,0330,0334,0337,0337
01115:0304,0310,0342,0330,0335,0306,0335,0311,0336,0342,0330,0334,0334,0342,0330,0334,0334,0334,0334,0350,0335,0337,0342,0330,0304,0335,0335,0313,0336,0336,0336,0333,0337,0337,0337
01116:0342,0330,0335,0306,0335,0313,0337,0312,0336,0342,0330,0334,0334,0350,0334,0337,0313,0336,0304,0342,0336,0336,0336,0333,0337,0337,0337
01117:0333,0336,0330,0332,0341,0331,0333,0337
01120:0333,0332,0336,0336,0333,0337,0337,0342,0336,0330,0336,0330,0333,0341,0333,0333,0330,0337,0337,0331
01121:0333,0336,0330,0332,0341,0335,0335,0336,0330,0332,0350,0334,0337,0342,0334,0351,0334,0333,0331,0336,0330,0337,0337
01122:0304,0313,0336,0336,0336,0333,0337,0337,0337,0342,0330,0335,0336,0336,0342,0333,0333,0342,0332,0330,0343,0333,0335,0337,0306,0350,0334,0337,0312,0336,0342,0337,0313,0336,0335,0330,0304,0334,0334,0333,0336,0336,0336,0332,0337,0337,0337,0337
01123:0313,0304,0336,0336,0332,0337,0337,0336,0330,0333,0336,0330,0343,0334,0350,0334,0343,0332,0332,0334,0334,0334,0334,0343,0335,0335,0335,0351,0343,0335,0335,0333,0331,0333,0337,0337
01124:0333,0336,0332,0337,0342,0330,0336,0335,0342,0331,0342,0330,0330,0334,0337,0331
01125:0333,0336,0336,0330,0332,0337,0342,0330,0336,0342,0331,0331,0332,0332,0342,0330,0342,0330,0342,0331,0331,0333,0335,0335,0343,0330,0335,0335,0337,0333,0337
01126:0333,0336,0332,0350,0350,0335,0337,0342,0334,0334,0342,0335,0335,0334,0351,0351,0336,0333,0337
01127:0336,0336,0336,0333,0333,0337,0337,0337,0304,0313,0350,0350,0350,0334,0342,0335,0335,0336,0342,0330,0304,0335,0350,0350,0335,0335,0335,0342,0330,0304,0334,0350,0334,0350,0334,0337,0342,0334,0350,0335,0304,0336,0336,0333,0336,0333,0337,0337,0337
01130:0313,0306,0350,0337,0312,0336,0335,0342,0334,0304,0337,0313,0336,0330,0335,0306,0335,0337,0312,0336,0342,0330,0334,0304,0334,0337,0313,0336,0336,0336,0336,0333,0337,0337,0337
01131:0304,0313,0336,0336,0336,0332,0337,0337,0337,0336,0333,0342,0330,0306,0350,0334,0337,0312,0336,0342,0335,0335,0342,0337,0313,0336,0334,0304,0331,0333,0337,0336,0336,0336,0332,0337,0337,0337
01132:0304,0335,0312,0336,0342,0337,0332,0336,0342,0337,0333,0306,0336,0334,0313,0337,0342,0335,0304,0336,0330,0334,0312,0337,0313,0336,0336,0336,0333,0337,0337,0337
01133:0333,0336,0336,0332,0332,0337,0337,0342,0330,0335,0336,0336,0342,0337,0337,0333,0336,0336,0342,0330,0330,0334,0337,0337
01134:0333,0336,0336,0332,0337,0337,0350,0350,0334,0342,0335,0351,0351,0336,0336,0333,0337,0337
01135:0333,0336,0336,0332,0337,0337,0342,0336,0336,0334,0342,0333,0333,0333,0333,0342,0335,0333,0337,0337,0331
01136:0333,0330,0336,0332,0334,0334,0350,0335,0342,0334,0334,0342,0334,0351,0334,0333,0337,0331
01137:0333,0334,0336,0336,0330,0337,0342,0336,0331,0335,0337,0337
01140:0333,0336,0332,0330,0336,0330,0350,0334,0342,0335,0351,0330,0333,0333,0337,0337,0331
01141:0304,0313,0336,0336,0336,0332,0332,0337,0337,0337,0333,0336,0332,0336,0330,0341,0333,0342,0331,0342,0330,0330,0332,0333,0333,0331,0331,0337,0337,0336,0336,0336,0332,0337,0337,0337,0313,0304
01142:0304,0313,0336,0336,0332,0337,0337,0333,0336,0336,0332,0332,0332,0337,0337,0342,0336,0336,0330,0333,0341,0333,0333,0331,0337,0337,0336,0336,0336,0332,0337,0337,0337,0304,0313
01143:0304,0313,0336,0336,0332,0337,0337,0333,0336,0332,0336,0330,0350,0343,0334,0334,0343,0334,0334,0343,0334,0334,0330,0330,0334,0334,0351,0331,0336,0332,0337,0337,0337
01144:0333,0336,0336,0332,0332,0337,0337,0342,0336,0336,0330,0332,0341,0333,0333,0331,0337,0337
01145:0304,0313,0336,0336,0332,0337,0337,0333,0336,0336,0332,0330,0332,0343,0334,0334,0350,0335,0343,0334,0343,0335,0335,0342,0351,0335,0335,0342,0333,0330,0330,0334,0336,0332,0337,0337,0337
01146:0304,0313,0336,0336,0332,0337,0337,,0333,0336,0336,0332,0332,0337,0342,0330,0336,0336,0342,0330,0333,0343,0332,0331,0331,0335,0337,0336,0342,0334,0334,0342,0335,0331,0331,0331,0333,0333,0333,0333,0337,0337,0337,0304,0313,0336,0336,0336,0332,0337,0337,0337
01147:0304,0313,0336,0336,0336,0332,0332,0337,0337,0337,0333,0336,0332,0336,0330,0341,0333,0342,0331,0342,0331,0342,0331,0342,0332,0335,0335,0343,0331,0331,0332,0332,0334,0334,0337,0337,0336,0336,0336,0332,0337,0337,0337
01150:0304,0313,0342,0336,0330,0333,0336,0331,0332,0343,0333,0334,0334,0342,0330,0334,0334,0336,0333,0337,0337,0337
01151:0333,0336,0336,0332,0332,0332,0342,0330,0336,0342,0330,0330,0330,0336,0341,0331,0331,0331,0331,0331,0331,0331,0331,0331,0331,0337,0333,0333,0337,0337,0337
01152:0333,0336,0336,0332,0332,0332,0342,0331,0342,0332,0335,0335,0343,0332,0331,0331,0331,0336,0336,0341,0330,0330,0330,0330,0330,0330,0330,0330,0335,0335,0337,0333,0333,0337,0337,0337
01153:0304,0313,0336,0336,0332,0337,0337,0333,0336,0336,0332,0332,0332,0337,0342,0330,0336,0342,0331,0350,0335,0342,0335,0335,0310,0337,0342,0336,0313,0334,0351,0334,0331,0333,0336,0333,0337,,0337,0337,0304,0313
01154:0304,0313,0336,0336,0336,0332,0337,0337,0337,0333,0336,0336,0332,0332,0332,0336,0336,0350,0335,0342,0334,0337,0337,0337,0342,0330,0336,0342,0330,0334,0334,0334,0336,0342,0335,0351,0335,0337,0331,0331,0331,0333,0337,0337
01155:0304,0313,0333,0336,0332,0336,0332,0336,0332,0332,0337,0337,0342,0336,0333,0330,0336,0332,0343,0333,0333,0343,0332,0331,0342,0331,0342,0337,0333,0342,0333,0337,0337
01156:0304,0313,0333,0336,0332,0336,0332,0336,0332,0332,0337,0337,0342,0336,0333,0330,0336,0332,0343,0333,0331,0331,0337,0342,0333,0337,0337
01157:0304,0313,0333,0336,0332,0336,0332,0330,0341,0333,0333,0331,0337,0337
01160:0304,0313,0336,0336,0332,0337,0337,,0333,0336,0332,0336,0332,0342,0335,0335,0337,0342,0336,0331,0332,0341,0333,0334,0334,0342,0331,0333,0333,0333,0337,0337
01161:0304,0313,0333,0336,0332,0336,0330,0332,0341,0333,0342,0331,0331,0337,0342,0336,0333,0334,0334,0336,0333,0343,0335,0335,0330,0330,0333,0337,0337,0337
01162:0333,0336,0332,0336,0332,0337,0342,0330,0336,0336,0342,0350,0335,0350,0337,0337,0335,0342,0335,0351,0351,0330,0334,0331,0336,0336,0333,0337,0337,0337
01163:0304,0313,0336,0336,0332,0337,0337,0333,0336,0336,0332,0332,0330,0336,0330,0350,0343,0334,0334,0343,0334,0350,0334,0343,0334,0351,0330,0330,0343,0334,0334,0343,0334,0334,0335,0343,0334,0351,0331,0333,0333,0337,0337,0337
01164:0304,0313,0333,0336,0332,0342,0330,0336,0342,0334,0342,0335,0335,0342,0333,0333,0336,0330,0335,0343,0335,0335,0333,0333,0333,0337,0337,0337
01165:0304,0313,0336,0336,0330,0342,0333,0334,0334,0343,0332,0334,0334,0342,0334,0334,0342,0330,0335,0335,0336,0333,0337,0337,0337
01166:0304,0313,0336,0336,0332,0337,0337,0333,0336,0332,0350,0350,0334,0342,0335,0335,0342,0334,0351,0351,0333,0337,0336,0336,0336,0332,0337,0337,0337
01167:0336,0336,0336,0333,0337,0337,0337,0313,0304,0336,0336,0336,0333,0337,0350,0350,0334,0337,0342,0335,0335,0336,0342,0330,0335,0335,0335,0335,0335,0335,0342,0330,0334,0334,0334,0334,0334,0334,0337,0342,0334,0304,0336,0333,0336,0333,0337,0337,0337
01170:0304,0313,0336,0306,0350,0335,0342,0351,0336,0333,0334,0337,0342,0350,0335,0304,0336,0336,0333,0337,0337,0337
01171:0304,0313,0336,0336,0332,0337,0337,0333,0336,0332,0336,0350,0335,0337,0350,0334,0342,0334,0334,0342,0334,0334,0334,0334,0334,0334,0342,0334,0351,0351,0335,0335,0333,0337,0336,0336,0336,0332,0337,0337,0337
01172:0304,0313,0336,0350,0335,0310,0337,0342,0330,0334,0334,0334,0336,0342,0334,0337,0330,0334,0334,0334,0336,0342,0330,0334,0334,0304,0313,0337,0336,0336,0336,0333,0337,0337,0337
01173:0333,0336,0330,0332,0336,0336,0330,0334,0350,0334,0342,0335,0335,0335,0342,0330,0335,0342,0334,0331,0331,0331,0334,0342,0335,0331,0342,0335,0335,0335,0342,0335,0351,0335,0335,0331,0331,0333,0333,0337,0337,0337
01174:0333,0336,0332,0337,0342,0330,0336,0336,0342,0337,0337,0331,0336,0336,0331,0342,0330,0333,0337,0337
01175:0333,0336,0336,0332,0332,0330,0330,0336,0330,0342,0330,0350,0334,0342,0335,0331,0335,0335,0335,0342,0335,0330,0330,0334,0334,0334,0342,0335,0335,0335,0342,0330,0335,0342,0334,0351,0330,0330,0335,0335,0333,0333,0333,0337,0337,0337
01176:0330,0336,0336,0336,0331,0331,0333,0333,0341,0331,0331,0331,0331,0331,0331,0333,0333,0333,0333,0337,0337,0337,
01177:0333,
 01200:0333,0200,0336,0336,0330,0332,0337,0200,0336,0331,0333,0337,0337,
01201:0304,0313,0333,0200,0336,0336,0330,0330,0332,0332,0332,0335,0336,0337,0337,0342,0330,0335,0350,0335,0336,0336,0342,0335,0335,0342,0335,0304,0337,0331,0331,0333,0337,0337,
0200:0304,0342,0330,0334,0342,0330,0334,0342,0330,0334,0342,0330,0334,
0201:0342,0330,
01201:0304,0313,0333,0200,0336,0336,0330,0330,0332,0332,0332,0335,0336,0337,0337,0342,0330,0335,0350,0335,0336,0336,0342,0335,0335,0342,0335,0304,0337,0331,0331,0333,0337,0337,
0202:0304,0313,0350,0335,0336,0336,0342,0333,0342,0333,0342,0333,0342,0333,0334,0304,0337,0337,
01202:0202,0200,
01203:0304,0313,0202,0332,0333,0200,0336,0336,0330,0330,0332,0332,0332,0335,0336,0337,0337,0342,0330,0335,0350,0335,0336,0336,0342,0335,0335,0342,0335,0304,0337,0331,0331,0333,0337,0337,
0203:0344,0330,
0204:0362,0203,0334,0203,0334,0203,0334,0203,0334,0363,
01204:0202,0200,0336,0336,0330,0332,0337,0200,0336,0331,0333,0337,0337,
01205:0202,0200,0336,0336,0330,0332,0332,0332,0330,0205,0331,0331,0332,0337,0337,0333,
0205:0362,0203,0335,0203,0203,0335,0203,0335,0203,0203,0335,0363,0336,0330,0333,0336,0331,0332,0337,0365,0336,0332,0331,0337,0337,
0206:0336,0332,0337,0362,0203,0334,0336,0203,0335,0350,0335,0337,0310,0337,0203,0335,0335,0203,0335,0304,0335,0336,0313,0336,0203,0334,0337,0203,0363,0335,0335,0336,0332,0337,
01206:0202,0200,0336,0332,0206,0333,0337,
0210:0316,0336,0313,0336,0314,0337,0337,0313,
01210:0333,0200,0336,0330,0336,0332,0334,0337,0342,0336,0330,0335,0336,0330,0332,0337,071,0365,0331,0331,061,060,0365,0333,0333,0336,0333,0331,0337,0337,0337,0337,
0211:0316,0336,0336,0336,0313,0337,0337,0337,0337,0337,0337,0337,
0207:0342,0334,0342,0335,0335,0342,0334,0336,0330,0340,0331,0337,0337,0330,0340,0331,0336,
01207:0333,0336,0330,0332,0336,0336,0341,0337,0333,0333,0331,0331,0337,0337,
0210:0335,0340,0341,0330,0340,0341,0334,0334,0306,0335,0330,0340,0341,0334,0334,0342,0330,0334,0334,0342,0330,0334,0334,0342,0314,0336,0330,0335,0330,0334,0334,0337,0341,0342,0330,0341,0334,0334,0342,0330,0341,0334,0334,0342,0330,0336,0331,0331,0341,0330,0341,0335,0334,0334,0330,0341,0334,0330,0341,0334,0330,0341,0334,0330,0341,0334,0300,0332,0332,0332,0330,0330,0300,0332,0332,0332,0332,0305,0311,0336,0330,0335,0350,0334,0335,0333,0335,0351,0337,0342,0341,0330,0335,0335,0342,0341,0330,0335,0335,0342,0341,0330,0335,0335,0342,0341,0330,0335,0335,0342,0341,0330,
0210:0310,0337,0311,0336,0313,
0211:0311,0337,0310,0336,0313,
01210:0333,0200,0336,0336,0330,0332,0337,0200,0311,0337,0310,0336,0200,0337,0311,0336,0313,0336,0330,0332,0336,0335,0331,0337,0342,0334,0333,0333,0336,0333,0337,0331,0331,0337,0337,
01211:0333,0200,0336,0336,0330,0332,0337,0200,0311,0337,0310,0336,0200,0337,0311,0336,0313,0336,0330,0332,0336,0335,0331,0337,0342,0334,0336,0333,0342,0335,0335,0342,0335,0335,0333,0337,0333,0336,0333,0337,0331,0331,0337,0337,
 0140:0304,
061:0305,
062:0306,
063:0350,
064:0351,
065:0352,
066:0353,
067:0310,
070:0311,
071:0312,
060:0313,
055:0314,
075:0316,
0161:0362,
0167:0203,
0145:0363,
0162:0364,
0164:0366,
0171:0367,
0165:024,
0151:0345,
0157:0346,
0160:0347,
0133:0365,
0135:0204,
0134:0201,
0141:0330,
0163:0331,
0144:0332,
0146:0333,
0147:0334,
0150:0335,
0152:0336,
0153:0337,
0172:0340,
0170:0341,
0143:0342,
0166:0343,
0142:0200,
0176:0320,
041:0321,
0100:0322,
043:0323,
044:0324,
045:0325,
0136:0326,
046:0327,
050:0212,
051:0213,
052:0300,
0137:0210,
053:0211,
0127:0220,
0127:0221,
0105:0222,
0122:0223,
0124:0224,
0131:0225,
0125:0226,
0111:0227,
0117:0230,
0120:0231,
0173:0232,
0175:0233,
0174:0234,
0101:0235,
0123:0236,
0104:0237,
0106:0240,
0107:0241,
0110:0242,
0112:0243,
0113:0244,
0114:0245,
073:0246,
0132:0247,
0130:0250,
0103:0251,
0126:0252,
0102:0253,
0116:0254,
0115:0255,
0156:030,
0155:031,
054:032,
056:033,
0154:036,
073:037,
074:0377,
072:0246,
0121:0220,
042:023,
047:021,
077:022,
057:020,
0132:0370,
0130:0371,
0103:0372,
0126:0373,
0102:0374,
0116:0375,
0115:0376,
0162:0360,
0165:0361,
0101:0230,
0123:0231,
0104:0232,
0106:0233,
0107:0234,
0110:0235,
0112:0236,
0113:0237,
0132:0240,
0130:0241,
0103:0242,
0126:0243,
0102:0244,
0116:0245,
0115:0246,
074:0247,
076:0177,
040:035,
01220:0333,0200,
01221:0333,0200,
01222:0333,0200,
01223:0333,0200,
01224:0333,0200,
01225:0333,0200,
01226:0333,0200,
01227:0333,0200,
01230:0333,0200,
01231:0333,0200,
01232:0333,0200,
01233:0333,0200,
01234:0333,0200,
01235:0333,0200,
01236:0333,0200,
01237:0333,0200,
01240:0333,0200,
01241:0333,0200,
01242:0333,0200,
01243:0333,0200,
01245:0333,0200,
01250:0333,0200,
01251:0333,0200,
01252:0333,0200,
01253:0333,0200,
0220:0336,0336,0336,0336,0336,0201,0337,0201,0306,0334,0337,0201,0335,0335,0201,0201,0334,0334,0201,0201,0335,0335,0201,0201,0334,0334,0201,0201,0335,0335,0201,0201,0334,0334,0201,0335,0201,0336,0336,0201,0304,0337,0337,0337,0337,0337,
0261:0336,0366,0330,0333,0333,0336,0331,0337,0367,0335,0335,0366,0331,0333,0333,0367,0335,0335,0337,
0221:0336,0314,0336,0313,0337,0261,0261,0261,0261,0337,0314,0337,0313,0336,
0222:0336,0336,0201,0336,0201,0334,0337,0342,0335,0335,0342,0332,0342,0335,0335,0342,0335,0336,0201,0337,0201,0335,0335,0337,0337,0335,0335,
01220:0333,0200,0336,0332,0337,0220,0336,0333,0337,0331,
01221:0333,0200,0336,0332,0330,0336,0331,0332,0337,0221,0333,0331,0336,0333,0336,0331,0337,0337,0337,0336,0336,0336,0331,0337,0337,0337,
01222:0333,0200,0336,0332,0337,0222,0336,0333,0337,0331,
01223:0333,0200,0336,0332,0337,0223,0336,0333,0337,0331,
0223:0336,0331,0342,0337,0304,0336,0336,0335,0310,0201,0335,0350,0335,0337,0201,0335,0335,0201,0335,0335,0335,0336,0201,0304,0334,0313,0337,0337,0304,0336,0330,0337,
01223:0333,0200,0336,0332,0337,0330,0223,0331,0336,0333,0337,
0224:0336,0336,0336,0201,0330,0330,0337,0341,0330,0341,0330,0336,0201,0337,0337,0337,
01224:0333,0200,0336,0332,0337,0224,0336,0333,0337,0331,
0225:0336,0336,0336,0201,0330,0330,0337,0341,0336,0331,0332,0337,0126,0365,0336,0333,0331,0331,0337,0337,0337,
01225:0333,0200,0336,0332,0337,0225,0336,0333,0337,
0226:0336,0330,0337,0336,0341,0332,0336,0350,0335,0342,0335,0335,0342,0335,0335,0342,0335,0335,0342,0335,0304,0337,0337,0333,0336,0336,0350,0335,0342,0335,0335,0342,0335,0335,0342,0335,0335,0342,0335,0304,0337,0332,0330,0337,
01226:0333,0200,0336,0332,0337,0226,0336,0333,0337,0331,
0227:0335,0312,0336,0306,0201,0334,0334,0313,0337,0201,0334,0334,0201,0334,0334,0336,0201,0304,0334,0312,0337,0313,0330,
01227:0333,0200,0336,0332,0337,0227,0336,0333,0337,0331,
0240:0201,0335,0201,0201,0335,0201,0335,0201,0201,0335,0336,0336,0330,0333,0331,0336,0330,0332,0337,0337,0333,0333,0201,0336,0201,0335,0201,0201,0201,0335,0201,0201,0201,0335,0201,0201,0201,0335,0330,0335,0201,0336,0366,0332,0332,0335,0335,0331,0367,0335,0335,0366,0333,0333,0334,0334,0331,0367,0335,0335,0337,0201,0334,0331,0332,0332,0332,0332,0332,0332,0336,0336,0341,0337,0337,0330,0330,0330,0336,0332,0331,0332,0123,0120,0105,0103,0124,0122,0125,0115,0365,0331,0331,0101,0116,0101,0114,0131,0132,0105,0122,0365,0337,0337,0331,0336,0336,0332,0337,0337,0337,
0241:0201,0335,0201,0201,0335,0201,0335,0201,0201,0335,0336,0336,0333,0333,0336,0330,0337,0337,0201,0336,0201,0335,0201,0201,0201,0335,0201,0201,0201,0335,0201,0201,0201,0335,0330,0330,0335,0366,0333,0330,0335,0335,0336,0331,0337,0367,0335,0335,0366,0330,0332,0335,0335,0336,0331,0337,0367,0335,0330,0330,0332,0332,0332,0332,0116,0105,0124,0127,0117,0122,0113,040,0101,0116,0101,0114,0131,0132,0105,0122,0336,0365,0337,0337,0331,0331,0336,0336,0336,0341,0337,0337,0333,0333,0333,0333,0333,0333,0336,0336,0341,0337,0337,0337,0332,0332,0332,0332,0336,0333,0331,0336,0330,0337,0337,0337,
0242:0304,0201,0335,0201,0201,0335,0201,0335,0201,0201,0335,0336,0336,0330,0333,0337,0104,0126,0115,0365,0336,0331,0332,0337,0337,
0243:0335,0336,0336,0333,0337,0337,0334,0336,0201,0335,0201,0201,0335,0201,0335,0201,0201,0335,0336,0330,0333,0336,0330,0332,0337,0335,0337,0336,0201,0366,0333,0330,0330,0334,0350,0334,0367,0335,0304,0336,0333,0331,0337,0330,0337,0337,0335,0334,
0244:0336,0336,0201,0335,0337,0201,0201,0335,0201,0335,0201,0201,0335,0336,0342,0336,0330,0333,0350,0335,0337,0366,0333,0334,0330,0334,0334,0336,0331,0367,0304,0335,0335,0366,0333,0333,0334,0333,0333,0333,0350,0334,0337,0367,0335,0304,0336,0333,0330,0337,0337,0337,
0230:0336,0336,0201,0334,0201,0335,0201,0335,0201,0201,0335,0201,0335,0201,0335,0330,0334,0330,0335,0201,0335,0201,0201,0335,0201,0335,0335,0330,0332,0201,0337,0337,
0231:0335,0227,0334,0336,0332,0336,0336,0331,0331,0333,0337,0332,0337,0226,0333,0336,0331,0336,0333,0337,0337,0337,
0232:0326,0335,0227,0334,0336,0332,0336,0331,0332,0332,0336,0330,0333,0337,0336,0337,0336,01110,01105,01115,01124,0337,0333,0336,0330,0333,0336,0333,0337,0337,0337,0337,0320,
0233:0322,0335,0227,0334,0336,0332,0336,0331,0332,0332,0336,0330,0333,0337,0336,0337,0336,01110,01105,01115,01124,0337,0333,0336,0330,0333,0336,0333,0337,0337,0337,0337,0320,
0234:0336,0333,0337,0200,0336,0332,0330,0310,0336,0335,0335,0343,0335,0335,0350,0334,0350,0334,0343,0335,0335,0335,0351,0335,0343,0334,0304,0330,0335,0350,0313,0336,0334,0342,0335,0335,0342,0334,0334,0334,0304,0337,0331,0310,0337,0313,0333,0331,0337,0330,0336,0332,0337,
0235:0335,0336,0336,0201,0334,0337,0337,0201,0336,0201,0334,0201,0334,0337,0201,0336,0201,0334,0336,0201,0334,0337,0337,0342,0336,0336,0336,0366,0337,0330,0333,0334,0330,0331,0336,0367,0335,0337,0332,0330,0330,0330,0201,0201,0335,0335,0336,0366,0335,0335,0337,0331,0333,0334,0336,0367,0335,0337,0330,0332,0337,0337,
0236:0336,0336,0201,0340,0337,0222,0331,0335,0336,0336,0201,0337,0337,0221,0336,0201,0334,0201,0201,0334,0201,0201,0201,0201,0201,0334,0201,0201,0201,0334,0201,0201,0201,0201,0201,0334,0201,0335,0336,0201,0334,0337,0337,0337,0332,0336,0330,0337,
0247:0332,0334,0326,0201,0201,0201,0201,0334,0201,0201,0334,0201,0201,0201,0201,0334,0201,0201,0336,0336,0336,0330,0337,0337,0337,0323,0327,0201,0334,0201,0201,0201,0201,0334,0201,0334,0201,0201,0201,0201,0334,0330,0336,0336,0336,0330,0337,0337,0337,0325,0201,0334,0201,0201,0201,0201,0334,0201,0334,0201,0201,0201,0201,0334,0330,0322,0201,0334,0201,0201,0201,0201,0334,0201,0334,0201,0201,0201,0201,0334,0335,0320,0330,0330,0330,0330,0337,0201,0335,0201,0201,0335,0201,0335,0201,0201,0336,0336,0336,0330,0333,0333,0331,0336,0330,0337,0122,0101,0103,0113,0365,0337,0337,0332,0332,0332,0332,0336,0330,0332,0336,0331,0331,0333,0336,0332,0122,0157,0157,0155,040,0124,0145,0155,0160,0145,0162,0141,0164,0165,0162,0145,0365,0337,0337,0331,0331,0336,0336,067,067,0113,0365,0337,0337,0331,0331,0331,0336,0330,0330,0331,0336,0330,0337,064,0336,0153,0365,0337,0337,0331,0331,0336,0331,0332,0333,0331,0331,0336,0102,0141,0163,0145,0365,0337,0330,0330,0330,0330,0330,0336,0123,0164,0151,0154,0154,0365,0337,0337,0330,0333,0330,0330,0330,0330,0330,0332,0330,0335,0366,0333,0333,0333,0333,0333,0333,0335,0335,0331,0367,0366,0332,0332,0332,0332,0335,0335,0331,0336,0333,0337,0367,0334,0330,0330,0330,0330,0333,0336,0330,0333,0336,0332,0104,0151,0154,0165,0164,0151,0157,0156,040,0106,0162,0151,0144,0147,0145,0365,0331,0331,0333,0333,0337,0337,0337,
0260:0331,0332,0332,0332,0331,0332,0336,0333,0230,0334,0335,0236,0336,0201,0337,0234,0336,0201,0337,0334,0232,0335,0201,0201,0201,0201,0335,0201,0334,0233,0335,0201,0201,0201,0201,0201,0201,0334,0337,0336,0336,0336,0330,0332,0337,0332,0331,0337,0337,0240,0331,0331,0332,0332,0332,0331,0332,0332,0331,0333,0336,0333,0331,0336,0330,0332,0336,0333,0336,0336,0336,0330,0333,0337,0337,0337,0337,0337,0335,0335,0335,0335,0223,0333,0333,0337,0333,0337,0333,0333,0333,0330,
01230:0333,0200,0336,0332,0337,0230,0336,0333,0337,0331,
01231:0333,0200,0332,0336,0330,0337,0231,0336,0331,0337,
01232:0333,0200,0332,0336,0330,0337,0232,0336,0331,0336,0336,0336,0336,0333,0337,0337,0337,0337,0337,
01233:0333,0200,0332,0336,0330,0337,0233,0336,0331,0336,0336,0336,0336,0333,0337,0337,0337,0337,0337,
01234:0333,0200,0336,0330,0332,0336,0331,0333,0332,0337,0234,0333,0331,0336,0331,0337,0337,
01235:0333,0200,0336,0332,0235,0333,0331,0336,0331,0337,0337,
01236:0333,0200,0336,0330,0332,0236,0333,0331,0331,0336,0336,0330,0337,0337,0337,
01237:0333,
01240:0240,0333,0333,
01241:0241,0333,0333,
01242:0242,0333,0333,
01243:0333,0200,0332,0336,0330,0337,0243,0336,0331,0337,
01244:0333,0200,0332,0336,0330,0337,0244,0336,0331,0337,
01245:0333,0200,

01020:0304,0333,0200,0336,0330,0332,0336,0336,0332,0337,0200,0333,0333,0200,0332,0332,0336,0330,0335,0337,0342,0330,0350,0335,0335,0351,0333,0350,0336,0334,0342,0334,0334,0342,0337,0335,0351,0333,0336,0333,0331,0337,0337,0331,0337,0304,0336,0330,0330,0336,0330,0334,0331,0337,0337,
01021:0304,0333,0200,0336,0330,0332,0336,0336,0332,0337,0200,0333,0333,0200,0332,0332,0336,0330,0335,0337,0342,0330,0350,0335,0335,0335,0336,0342,0335,0335,0342,0337,0335,0351,0333,0336,0333,0331,0337,0337,0331,0337,0304,
01022:0333,0200,0336,0336,0330,0330,0332,0332,0332,0336,0336,0333,0337,0337,0336,0330,0336,0333,0337,0337,0200,0333,0200,0333,0200,0331,0331,0332,0332,0200,0333,0200,0333,0200,0336,0333,0331,0337,0337,0332,0330,0336,0336,0331,0337,0342,0330,0335,0350,0335,0336,0342,0335,0335,0342,0337,0335,0335,0335,0351,0331,0331,0331,0333,0333,0336,0330,0337,0337,0337,
01023:0333,0200,0336,0336,0330,0330,0332,0332,0332,0336,0336,0333,0337,0337,0336,0330,0336,0333,0337,0337,0200,0333,0200,0333,0200,0331,0331,0332,0332,0200,0333,0200,0333,0200,0336,0333,0331,0337,0337,0332,0330,0336,0336,0331,0337,0335,0335,0331,0342,0330,0335,0350,0335,0336,0342,0335,0335,0342,0337,0335,0335,0335,0351,0331,0331,0331,0333,0333,0336,0330,0337,0337,0337,0335,0335,0331,0333,
01024:0333,0200,0336,0336,0330,0332,0337,0200,0336,0336,0330,0332,0337,0200,0336,0336,0330,0332,0337,0200,0333,0333,0333,0331,0331,0331,0336,0331,0333,0337,0337,0337,0337,
01025:0333,0200,0336,0336,0330,0332,0337,0336,0336,0330,0332,0337,0200,0336,0336,0330,0332,0337,0200,0333,0333,0333,0331,0331,0331,0336,0331,0333,0337,0337,0337,0337,
01026:0333,0200,0336,0330,0332,0336,0336,0333,0331,0337,0200,0306,0335,0342,0332,0342,0330,0335,0335,0342,0335,0335,0335,0335,0331,0334,0304,0332,0306,0335,0342,0330,0350,0335,0342,0334,0331,0335,0304,0334,0331,0332,0335,0336,0332,0337,0342,0330,0350,0335,0335,0335,0336,0342,0335,0335,0342,0335,0304,0331,0331,0331,0331,0333,0333,0333,0333,0333,0337,0337,0337,
01027:0333,0200,0336,0330,0332,0336,0336,0333,0331,0337,0332,0200,0306,0335,0342,0332,0342,0330,0335,0335,0342,0335,0335,0335,0335,0331,0334,0304,0332,0306,0335,0342,0330,0350,0335,0342,0334,0331,0335,0304,0334,0331,0333,0333,0330,0335,0342,0330,0350,0335,0335,0335,0336,0342,0335,0335,0342,0335,0304,0331,0331,0331,0331,0331,0333,0337,0337,0337,
01031:0333,0200,0336,0330,0332,0336,0332,0331,0123,0126,0107,0365,0330,0330,0332,0332,0330,0335,0335,0336,0330,0332,0337,0201,0335,0350,0335,0336,0342,0335,0335,0342,0334,0304,0333,0333,0333,0333,0331,0331,0331,0331,0331,0332,0336,0333,0336,0332,0337,0337,0337,0337,0337,
01010:0333,0200,0350,0334,0310,0337,0342,0336,0332,0335,0335,0337,0342,0336,0333,0334,0351,0313,
01030:0333,0200,0336,0330,0332,0336,0334,0362,0203,0335,0350,0335,0310,0337,0203,0335,0335,0203,0335,0335,0335,0336,0203,0364,0304,0335,0313,0337,0333,0331,0337,
01031:0333,0200,0336,0330,0332,0336,0334,0335,0335,0362,0203,0335,0350,0335,0310,0337,0203,0335,0335,0203,0335,0335,0335,0336,0203,0364,0304,0335,0335,0335,0313,0337,0333,0331,0337,
01032:0333,0200,0336,0330,0332,0334,0336,0334,0362,0203,0335,0350,0335,0310,0337,0203,0335,0335,0203,0335,0335,0335,0336,0203,0364,0304,0335,0335,0313,0337,0333,0331,0337,
01033:0333,0200,0336,0330,0332,0335,0336,0334,0362,0203,0335,0350,0335,0310,0337,0203,0335,0335,0203,0335,0335,0335,0336,0203,0364,0304,0313,0337,0333,0331,0337,
01037:0333,0200,0336,0332,0330,0336,0332,0362,0335,0335,0203,0335,0350,0335,0310,0337,0203,0335,0335,0203,0335,0335,0335,0336,0203,0364,0335,0335,0330,0334,0335,0331,0331,0331,0331,0334,0337,0362,0203,0335,0335,0335,0336,0203,0203,0335,0335,0335,0337,0203,0364,0331,0335,0336,0304,0313,0333,0331,0337,0332,0335,0335,0337,0331,
01036:0333,0200,0336,0332,0330,0336,0332,0362,0203,0335,0350,0335,0310,0337,0203,0335,0335,0203,0335,0335,0335,0336,0203,0364,0335,0335,0330,0334,0337,0362,0203,0335,0335,0335,0336,0203,0203,0335,0335,0335,0337,0203,0364,0331,0335,0336,0304,0313,0333,0331,0337,0337,
01034:0333,
01035:0333,
01300:0333,0200,0336,0330,0332,0340,0350,0335,0336,0330,0342,0331,0331,0331,0342,0330,0330,0335,0335,0331,0331,0342,0330,0330,0330,0342,0331,0334,0334,0334,0351,0331,0331,0333,0333,0337,0337
01301:0333,
01302:0333,
01303:0333,
01304:0333,0200,0336,0330,0332,0341,0342,0335,0342,0335,0342,0335,0342,0350,0335,0351,0336,0336,0330,0330,0341,0331,0331,0335,0330,0330,0341,0331,0331,0335,0330,0330,0341,0331,0331,0335,0330,0330,0341,0331,0331,0350,0334,0351,0337,0337,0330,0335,0335,0333,0337
01305:0333,0200,0336,0330,0332,0305,0342,0335,0342,0335,0342,0335,0342,0335,0342,0335,0341,0350,0335,0351,0336,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0350,0335,0304,0337,0331,0333,0337
01306:0333,0200,0336,0330,0332,0306,0342,0335,0342,0335,0342,0335,0342,0335,0342,0335,0341,0350,0335,0351,0336,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0335,0330,0336,0336,0341,0337,0337,0331,0350,0335,0335,0335,0337,0342,0334,0336,0330,0336,0336,0341,0337,0337,0331,0304,0335,0337,0331,0333,0337
01307:0333,
01310:0333,0200,0336,0332,0350,0335,0310,0337,0342,0330,0334,0334,0342,0330,0334,0334,0342,0330,0334,0334,0342,0330,0334,0334,0334,0351,0336,0313,0333,0337
01311:0335,0305,0342,0334,0311,0337,0342,0336,0335,0330,0334,0350,0334,0337,0342,0334,0334,0304,0336,0313,0335,0200,0334,0305,0350,0335,0342,0330,0335,0335,0335,0311,0336,0342,0330,0334,0334,0334,0336,0342,0335,0335,0335,0337,0331,0334,0334,0334,0337,0331,0334,0313,0304,0335
01312:0333,0200,0352,0334,0342,0330,0334,0334,0334,0334,0342,0334,0312,0337,0313,0336,0342,0330,0334,0334,0334,0334,0336,0342,0334,0334,0304,0312,0336,0313,0337,0333,0337
01313:0333,0200,0336,0336,0332,0332,0330,0342,0334,0342,0330,0335,0342,0330,0335,0342,0330,0342,0330,0335,0342,0330,0335,0342,0335,0331,0333,0337,0337
01314:0333,0200,0314,0336,0332,0332,0330,0200,0333,0200,0333,0200,0331,0337,0313
01315:0333,0313,0200,0336,0330,0332,0341,0335,0342,0334,0334,0342,0334,0334,0330,0334,0331,0337
01316:0333,0200,0336,0336,0330,0332,0332,0332,0336,0341,0330,0330,0330,0330,0341,0333,0333,0331,0331,0341,0333,0333,0330,0330,0341,0331,0331,0331,0331,0341,0333,0333,0331,0331,0337,0337,0337,
01317:0333,0200,0336,0336,0330,0332,0336,0330,0333,0337,0342,0336,0330,0334,0337,0337,0342,0330,0336,0342,0330,0335,0336,0342,0331,0342,0332,0330,0337,0337,0333,0333,0331,0337
01317:0333,
01315:0333,
01320:0333,0200,0336,0336,0330,0332,0337,0320,0204,0336,0333,0331,0337,0337,
01321:0333,0200,0336,0336,0330,0332,0337,0321,0204,0336,0333,0320,0331,0337,0337,
01322:0333,0200,0336,0336,0330,0332,0337,0322,0204,0320,0336,0333,0331,0337,0337,
01323:0333,0200,0336,0336,0330,0332,0337,0323,0204,0320,0336,0333,0331,0337,0337,
01324:0333,0200,0336,0336,0330,0332,0337,0324,0204,0320,0336,0333,0331,0337,0337,
01325:0333,0200,0336,0336,0330,0332,0337,0325,0204,0320,0336,0333,0331,0337,0337,
01326:0333,0200,0336,0336,0330,0332,0337,0326,0204,0336,0320,0333,0331,0337,0337,
01327:0333,0200,0336,0336,0330,0332,0337,0327,0204,0336,0320,0333,0331,0337,0337,
01330:0333,0200,0313,0336,0336,0330,0332,0336,0332,0337,0342,0334,0342,0330,0335,0342,0330,0334,0336,0342,0330,0335,0350,0335,0337,0310,0337,0342,0330,0335,0335,0342,0330,0335,0335,0335,0336,0313,0336,0342,0330,0351,0335,0331,0331,0331,0331,0333,0333,0333,0337,0337,0337
01331:0333,0200,0335,0335,0333,0331,0313,0336,0336,0330,0332,0336,0332,0337,0342,0334,0342,0330,0335,0342,0330,0334,0336,0342,0330,0335,0350,0335,0337,0310,0337,0342,0330,0335,0335,0342,0330,0335,0335,0335,0336,0313,0336,0342,0330,0351,0335,0331,0331,0331,0331,0333,0333,0333,0337,0337,0337,0332,0335,0335,0331
01332:0333,0200,0334,0333,0313,0336,0336,0330,0332,0336,0332,0337,0342,0334,0342,0330,0335,0342,0330,0334,0336,0342,0330,0335,0350,0335,0337,0310,0337,0342,0330,0335,0335,0342,0330,0335,0335,0335,0336,0313,0336,0342,0330,0351,0335,0331,0331,0331,0331,0333,0333,0333,0337,0337,0337,0335,0331
01333:0333,0200,0335,0331,0313,0336,0336,0330,0332,0336,0332,0337,0342,0334,0342,0330,0335,0342,0330,0334,0336,0342,0330,0335,0350,0335,0337,0310,0337,0342,0330,0335,0335,0342,0330,0335,0335,0335,0336,0313,0336,0342,0330,0351,0335,0331,0331,0331,0331,0333,0333,0333,0337,0337,0337,0330,0334
01334:0333,0200,0336,0330,0332,0336,0350,0343,0334,0334,0343,0334,0334,0343,0334,0342,0335,0330,0336,0330,0334,0334,0334,0337,0342,0334,0351,0336,0331,0337,0337,0333,0337
01335:0333,0200,0336,0330,0332,0336,0350,0343,0334,0334,0343,0334,0334,0343,0334,0334,0334,0342,0334,0330,0336,0330,0335,0335,0335,0337,0342,0336,0335,0331,0351,0337,0337,0332,0335,0335,0337,0331
01336:0333,0200,0336,0330,0334,0336,0330,0337,0342,0336,0331,0335,0337,0331,0337
01337:0333,0200,0336,0330,0332,0336,0342,0334,0342,0334,0342,0334,0342,0330,0330,0334,0337,0331,0337
01340:0333,0200,0336,0330,0332,0340,0333,0331,0337
01341:0333,0200,0336,0330,0332,0341,0340,0333,0331,0337
01342:0333,0200,0336,0330,0332,0334,0336,0342,0330,0340,0331,0335,0335,0342,0330,0340,0333,0333,0330,0334,0337,0337
01343:0333,0200,0336,0330,0332,0350,0343,0335,0342,0334,0334,0342,0335,0340,0351,0331,0333,0337
01344:0304,0313,0333,0200,0336,0332,0344,0333,0337
01345:0304,0313,0333,0200,0336,0332,0345,0333,0337
01346:0304,0313,0333,0200,0336,0332,0346,0333,0337
01347:0304,0313,0333,0200,0336,0332,0336,0330,0330,0347,0331,0331,0337,0333,0337,
01350:0333,0200,0336,0330,0332,0350,0335,0342,0335,0335,0342,0334,0336,0336,0342,0330,0330,0342,0331,0331,0351,0337,0337,0334,0333,0331,0337
01351:0333,0200,0336,0332,0330,0350,0335,0336,0336,0342,0330,0330,0342,0330,0330,0342,0331,0331,0331,0331,0335,0337,0337,0342,0335,0342,0334,0351,0333,0330,0334,0337
01352:0333,0200,0336,0330,0332,0335,0350,0352,0334,0334,0334,0342,0335,0335,0336,0336,0342,0330,0330,0342,0331,0331,0335,0335,0342,0330,0330,0342,0331,0331,0335,0335,0337,0337,0342,0335,0335,0335,0351,0353,0330,0334,0334,0333,0337
01353:0333,0200,0336,0330,0332,0335,0350,0352,0334,0342,0335,0335,0342,0335,0335,0336,0336,0342,0330,0330,0342,0331,0331,0334,0334,0334,0334,0334,0334,0342,0330,0330,0342,0331,0331,0335,0335,0335,0351,0353,0337,0337,0333,0330,0334,0337
01360:0333,0200,
01361:0333,0200,0336,0336,0330,0332,0337,0200,0306,0350,0336,0334,0342,0330,0334,0334,0334,0334,0342,0330,0335,0335,0335,0335,0342,0330,0334,0334,0334,0334,0342,0330,0334,0334,0334,0334,0334,0335,0330,0330,0330,0304,0334,0331,0337,0337,
01362:0333,0200,0336,0336,0330,0332,0332,0332,0340,0342,0330,0342,0330,0335,0342,0330,0342,0330,0350,0334,0334,0334,0342,0334,0334,0335,0334,0342,0334,0304,0330,0330,0330,0334,0334,0333,0337,0337,
01364:0304,0313,0333,0200,0336,0332,0330,0336,0330,0332,0335,0342,0330,0342,0330,0335,0342,0330,0342,0330,0334,0350,0334,0342,0334,0334,0342,0340,0335,0304,0331,0333,0337,0337
01363:0304,0313,0333,0200,0336,0332,0330,0336,0330,0332,0335,0342,0330,0342,0330,0335,0342,0330,0342,0330,0334,0350,0334,0342,0334,0334,0342,0340,0335,0304,0331,0333,0337,0337,0332,0202,
01365:0313,0304,0333,0200,0336,0330,0332,0336,0331,0332,0337,0350,0350,0334,0342,0335,0335,0342,0334,0304,0333,0350,0350,0334,0342,0335,0335,0342,0334,0304,0336,0333,0331,0337,0337
01344:0333,0200,0336,0330,0332,0336,0332,0340,0335,0337,0342,0330,0340,0334,0332,0336,0331,0332,0331,0337,0337,0202,
01345:0202,0200,0350,0334,0343,0335,0304,
01346:0202,0200,0350,0334,0332,0335,0335,0343,0333,0335,0304,0334,
01365:0313,0304,0333,0200,0336,0330,0332,0336,0331,0332,0337,0350,0350,0334,0342,0335,0335,0342,0334,0304,0333,0350,0350,0334,0342,0335,0335,0342,0334,0304,0336,0333,0331,0337,0337
01366:0333,0200,0336,0336,0332,0332,0332,0330,0335,0337,0342,0340,0366,0330,0332,0335,0335,0367,0335,0336,0333,0330,0337,0337,0331,
01367:0333,0200,0336,0336,0332,0332,0332,0330,0335,0337,0366,0330,0332,0335,0335,0367,0335,0336,0340,0334,0337,0342,0336,0333,0330,0337,0337,0331,0335,0331,0336,0332,0337,
01360:0333,0200,0336,0336,0332,0332,0332,0330,0335,0337,0342,0340,0366,0330,0332,0335,0335,0367,0335,0336,0333,0330,0337,0337,0331,0332,0202,
01361:0333,0200,0336,0336,0332,0332,0332,0330,0335,0337,0366,0330,0332,0335,0335,0367,0335,0336,0340,0334,0337,0342,0336,0333,0330,0337,0337,0331,0335,0331,0336,0332,0337,0332,0202,
*/
</script>
<script id = "topfunctions">
 function string2byteCode(localString){
    var localByteCode = "";
    for(var stringIndex = 0;stringIndex < localString.length;stringIndex++){
        var tempCharCode = localString.charCodeAt(stringIndex);
        if(tempCharCode != 0){
            localByteCode += "0";
            localByteCode += tempCharCode.toString(8);
            localByteCode += ",";
        }
    }
    return localByteCode;
}
        
function byteCode2string(localByteCode){
    var localString = "";
    var stringArray = localByteCode.split(",");
    for(var index = 0;index < stringArray.length;index++){
        var myCharCode = String.fromCharCode(parseInt(stringArray[index],8));
        if(parseInt(stringArray[index],8) >= 040 && parseInt(stringArray[index],8) < 0177 ){
            localString += myCharCode;
        }
        if(parseInt(stringArray[index],8) == 012){//newline
            localString += myCharCode;
        }
        if(parseInt(stringArray[index],8) == 011){//vertical tab
            localString += myCharCode;
        }		
        if(parseInt(stringArray[index],8) >= 0400 && parseInt(stringArray[index],8) <= 0777){
            if(currentTable[parseInt(stringArray[index],8)].length > 0){
                localString += byteCode2string(currentTable[parseInt(stringArray[index],8)]);
            }
        }		
        
    }
    return localString;
}
        
function drawGlyph(localString){
    var tempArray = localString.split(',');
    for(var index = 0;index < tempArray.length;index++){
        doTheThing(parseInt(tempArray[index],8));
    }
}
    
function spellGlyph(localString){
    var tempArray = localString.split(',');
    for(var index = 0;index < tempArray.length;index++){
        ctx.lineWidth = 2;
        // ctx.strokeStyle="black";
        if(x > 0.94*innerWidth){
            y+= 1.1*side;
            x = side;
        }
        doTheThing(parseInt(tempArray[index],8) + 01000);
        if(parseInt(tempArray[index],8) > 01000){
            doTheThing(01060);
            doTheThing(01061);
            var sixtyfours = (parseInt(tempArray[index],8) & 0700) >> 6;
            var eights = (parseInt(tempArray[index],8) & 070) >> 3;
            var ones = parseInt(tempArray[index],8) & 07;
            doTheThing(01060 + sixtyfours);            
            doTheThing(01060 + eights);            
            doTheThing(01060 + ones);            
        }
    }
}




   
</script>
<script id = "actions">
function doTheThing(localCommand){    
    if(localCommand >= 040 && localCommand <= 0176){
        currentHTML += String.fromCharCode(localCommand);
        currentWord += String.fromCharCode(localCommand);
    }
    if(localCommand >= 0200 && localCommand <= 0277){//shapes 
        if(!(localCommand == 0207 && editMode == false) ){
            drawGlyph(currentTable[localCommand]);    	    
        }
    }
    if(localCommand >= 01000 && localCommand <= 01777){//symbol glyphs
            drawGlyph(currentTable[localCommand]);    	    
    } 
     if(localCommand == 0300){// <page0300>
        x = x0;
        y = y0;
        theta = theta0;
        side = unit;
        thetaStep = Math.PI/2;
        scaleFactor = 2;
        ctx.lineWidth = 2;
        ctx.strokeStyle= resetColor;//"#00ff00";
        ctx.fillStyle=resetColor;
        currentStroke = resetColor;
        currentFill = resetColor;
        currentWord = "";
        currentHTML = "";
        currentStyle = "";

        //</page0300>
    }
    if(localCommand == 0304){//<page0304>
    thetaStep = Math.PI/2;
    //</page0304>
    }
    if(localCommand == 0305){//<page0305>
    thetaStep = 2*Math.PI/5;
    //</page0305>
    }
    if(localCommand == 0306){//<page0306>
    thetaStep = Math.PI/3;
    //</page0306>
    }
    if(localCommand == 0310){//<page0310>
    scaleFactor = Math.sqrt(2); 
    //</page0310>
    }
    if(localCommand == 0311){//<page0311>
    scaleFactor = phi; //"golden" ratio 
    //</page0311>
    }
    if(localCommand == 0312){//<page0312>
    scaleFactor = Math.sqrt(3); 
    //</page0312>
    }
    if(localCommand == 0313){//<page0313>
    scaleFactor = 2;  //2x
    //</page0313>
    }
    if(localCommand == 0314){//<page0314>
    scaleFactor = 3;  //3x
    //</page0314>
    }
    if(localCommand == 0315){//<page0315>
    scaleFactor = 3.14159;  //pi*
    //</page0315>
    }
    if(localCommand == 0316){//<page0316>
    scaleFactor = 5;  //5*
    //</page0316>
    }
    if(localCommand == 0317){//<page0317>
    side = unit; 
    //</page0317>
    }
    if(localCommand == 0320){//<page0320>
    ctx.strokeStyle="black";
    ctx.lineWidth = 2;    	
    ctx.fillStyle = "black";
    currentStroke = "black";
    currentFill = "black";
    //</page0320>
    }
    if(localCommand == 0321){//<page0321>
    ctx.strokeStyle = "white";
    ctx.lineWidth = 2;    	
    ctx.fillStyle = "white";
    currentStroke = "white";
    currentFill = "white";
    //</page0321>
    }
    if(localCommand == 0322){//<page0322>
    ctx.strokeStyle="red";
    ctx.lineWidth = 2;
    ctx.fillStyle = "red";    
    currentStroke = "red";
    currentFill = "red";
    //</page0322>
    }
    if(localCommand == 0323){//<page0323>
    ctx.strokeStyle="orange";
    ctx.lineWidth = 2;
    ctx.fillStyle = "orange";    
    currentStroke = "orange";
    currentFill = "orange";
    //</page0323>
    }
    if(localCommand == 0324){//<page0324>
    ctx.strokeStyle="yellow";
    ctx.lineWidth = 2;
    ctx.fillStyle = "yellow";    
    currentStroke = "yellow";
    currentFill = "yellow";
    //</page0324>
    }
    if(localCommand == 0325){//<page0325>
    ctx.strokeStyle="green";
    ctx.lineWidth = 2;
    ctx.fillStyle = "green";    
    currentStroke = "green";
    currentFill = "green";
    //</page0325>
    }
    if(localCommand == 0326){//<page0326>
    ctx.strokeStyle="blue";
    ctx.lineWidth = 2;
    ctx.fillStyle = "blue";    
    currentStroke = "blue";
    currentFill = "blue";
    //</page0326>
    }
    if(localCommand == 0327){//<page0327>
    ctx.strokeStyle="purple";
    ctx.lineWidth = 2;
    ctx.fillStyle = "purple";    
    currentStroke = "purple";
    currentFill = "purple";
    //</page0327>
    }
    if(localCommand == 0330){//<page0330>
    x += side*Math.cos(theta);   
    y += side*Math.sin(theta); 
    //</page0330>
    }
    if(localCommand == 0331){//<page0331>
    x -= side*Math.cos(theta);   
    y -= side*Math.sin(theta); 
    //</page0331>
    }
    if(localCommand == 0332){//<page0332>
    x += side*Math.cos(theta - thetaStep);
    y += side*Math.sin(theta - thetaStep);
    //</page0332>
    }
    if(localCommand == 0333){//<page0333>
    x += side*Math.cos(theta + thetaStep);
    y += side*Math.sin(theta + thetaStep);
    //</page0333>
    }
    if(localCommand == 0334){//<page0334>
    theta -= thetaStep; // CCW
    //</page0334>    
    }
    if(localCommand == 0335){//<page0335>
    theta += thetaStep; // CW
    //</page0335>
    }
    if(localCommand == 0336){//<page0336>
    side /= scaleFactor; // -
    //</page0336>
    }
    if(localCommand == 0337){//<page0337>
    side *= scaleFactor; // +
    //</page0337>
    }
    if(localCommand == 0340){//<page0340>

    //point
    ctx.beginPath();
    ctx.arc(x, y, 3, 0, 2 * Math.PI);
    ctx.fill();	
    ctx.closePath();
    currentSVG += "<circle cx=\"";
    currentSVG += Math.round(x).toString();
    currentSVG += "\" cy = \"";
    currentSVG += Math.round(y).toString();
    currentSVG += "\" r = \"3\" stroke = \"" + currentStroke + "\" stroke-width = \"2\" ";
    currentSVG += "fill = \"" + currentStroke + "\" />\n";		
    //</page0340>
    }
    if(localCommand == 0341){//<page0341>
    //circle
    ctx.beginPath();
    ctx.arc(x, y, side, 0, 2 * Math.PI);
    ctx.closePath();
    ctx.stroke();
    currentSVG += "    <circle cx=\"";
    currentSVG += Math.round(x).toString();
    currentSVG += "\" cy = \"";
    currentSVG += Math.round(y).toString();
    currentSVG += "\" r = \"" + side.toString() + "\" stroke = \"" + currentStroke + "\" stroke-width = \"2\" ";
    currentSVG += "fill = \"none\" />\n";		
    //</page0341>
    }
    if(localCommand == 0342){//<page0342>
    //line
    ctx.beginPath();
    ctx.moveTo(x,y);
    ctx.lineTo(x + side*Math.cos(theta),y + side*Math.sin(theta));
    ctx.stroke();		
    ctx.closePath();

    var x2 = Math.round(x + side*Math.cos(theta));
    var y2 = Math.round(y + side*Math.sin(theta));
    currentSVG += "    <line x1=\""+Math.round(x).toString()+"\" y1=\""+Math.round(y).toString()+"\" x2=\""+x2.toString()+"\" y2=\""+y2.toString()+"\" style=\"stroke:" + currentStroke + ";stroke-width:2\" />\n"

    //</page0342>
    }
    if(localCommand == 0343){//<page0343>
    ctx.beginPath();
    ctx.arc(x, y, side, theta - thetaStep,theta + thetaStep);
    ctx.stroke();
    ctx.closePath();
    localString = "";
    localString += "  <path d=\"";	
    localString += "M";
    var localInt = x + side*Math.cos(theta - thetaStep);
    localString += localInt.toString();
    localString += " ";
    localInt = y + side*Math.sin(theta - thetaStep);
    localString += localInt.toString();
    currentSVG += localString;
    localString = "           A" + side.toString() + " " + side.toString() + " 0 0 1 ";
    localInt = x + side*Math.cos(theta + thetaStep);
    localString += localInt.toString() + " ";
    localInt = y + side*Math.sin(theta + thetaStep);
    localString += localInt.toString() + "\" fill = \"none\" stroke = \"" + currentStroke + "\" stroke-width = \"2\" />\n";
    currentSVG += localString;
    //</page0343>    
    }
    if(localCommand == 0344){//<page0344>
    //part of a poly line or path 
    ctx.lineTo(x + side*Math.cos(theta),y + side*Math.sin(theta));
    ctx.stroke();		

    var x2 = Math.round(x + side*Math.cos(theta));
    var y2 = Math.round(y + side*Math.sin(theta));
    currentSVG += "L" + x2 + " " + y2 + " ";

    //</page0344>
    }
    if(localCommand == 0345){//<page0345>
    //arc
    ctx.arc(x, y, side, theta - thetaStep,theta + thetaStep);
    ctx.stroke();

    localString = "";
    localString += "M";
    var localInt = x + side*Math.cos(theta - thetaStep);
    localString += localInt.toString();
    localString += " ";
    localInt = y + side*Math.sin(theta - thetaStep);
    localString += localInt.toString();
    currentSVG += localString;
    localString = "           A" + side.toString() + " " + side.toString() + " 0 0 1 ";
    localInt = x + side*Math.cos(theta + thetaStep);
    localString += localInt.toString() + " ";
    localInt = y + side*Math.sin(theta + thetaStep);
    localString += localInt.toString();
    currentSVG += localString;

    //</page0345>
    }
    if(localCommand == 0346){//<page0346>
    //arc, reverse direction
    ctx.arc(x, y, side, theta + thetaStep,theta - thetaStep,true);
    ctx.stroke();

    localString = "";
    localString += "M";
    var localInt = x + side*Math.cos(theta - thetaStep);
    localString += localInt.toString();
    localString += " ";
    localInt = y + side*Math.sin(theta - thetaStep);
    localString += localInt.toString();
    currentSVG += localString;
    localString = "           A" + side.toString() + " " + side.toString() + " 0 0 1 ";
    localInt = x + side*Math.cos(theta + thetaStep);
    localString += localInt.toString() + " ";
    localInt = y + side*Math.sin(theta + thetaStep);
    localString += localInt.toString();
    currentSVG += localString;
    //</page0346>
    }
    if(localCommand == 0347){//<page0347>
    //filled circle
    ctx.beginPath();
    ctx.arc(x, y, side, 0, 2 * Math.PI);
    ctx.closePath();
    ctx.stroke();
    ctx.fill();
    currentSVG += "    <circle cx=\"";
    currentSVG += Math.round(x).toString();
    currentSVG += "\" cy = \"";
    currentSVG += Math.round(y).toString();
    currentSVG += "\" r = \"" + side.toString() + "\" stroke = \"" + currentStroke + "\" stroke-width = \"2\" ";
    currentSVG += "fill = \"" + currentFill + "\" />\n";		

    //</page0347>
    }
    if(localCommand == 0350){//<page0350>
    thetaStep /= 2;  //angle/2
    //</page0350>
    }
    if(localCommand == 0351){//<page0351>
    thetaStep *= 2;  //2angle
    //</page0351>
    }
    if(localCommand == 0352){//<page0352>
    thetaStep /= 3; //angle/3
    //</page0352>
    }
    if(localCommand == 0353){//<page0353>
    thetaStep *= 3; //3angle
    //</page0353>
    }
    if(localCommand == 0360){//<page0360>  //first part of bezier in middle of a path
        ctx.moveTo(Math.round(x),Math.round(y));
        cpx1 = Math.round(x + side*Math.cos(theta));
        cpy1 = Math.round(y + side*Math.sin(theta));
        currentSVG += " M";
        currentSVG += (Math.round(x)).toString() + ",";
        currentSVG += (Math.round(y)).toString() + " C";
        currentSVG += cpx1.toString() + "," + cpy1.toString() + " ";
    //</page0360>
    }
    if(localCommand == 0361){//<page0361>
        x2 = Math.round(x);
        y2 = Math.round(y);
        cpx2 = Math.round(x + side*Math.cos(theta));
        cpy2 = Math.round(y + side*Math.sin(theta));
        ctx.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,x2,y2);
        ctx.stroke();
        currentSVG += cpx2.toString() + "," + cpy2.toString() + " ";
        currentSVG += x2.toString() + "," + y2.toString() + " ";		
    
    //</page0361>
    }
    if(localCommand == 0362){//<page0362>
    ctx.beginPath();
    ctx.moveTo(x,y);
    currentSVG += "	<path d = \"M";
    currentSVG += Math.round(x).toString() + " ";
    currentSVG += Math.round(y).toString() + " ";

    //	   currentSVG += "  <polyline points=\"";		
    //</page0362>
    }
    if(localCommand == 0363){//<page0363>
    ctx.closePath();
    ctx.stroke();		
    ctx.fill();		
    currentSVG += "Z\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"2\" fill = \"" + currentFill + "\" "+"/>";
    //</page0363>
    }
    if(localCommand == 0364){//<page0364>
    ctx.closePath();
    currentSVG += "\""+ " stroke = \"" + currentStroke + "\" stroke-width = \"2\" fill = \"" + "none" + "\" "+"/>";
    //</page0364>
    }
    if(localCommand == 0365){//<page0365>
    ctx.font=side.toString(8) + "px " + myFont;
    ctx.fillText(currentWord,x,y);
    currentSVG += "    <text x=\"";
    currentSVG += Math.round(x).toString();
    currentSVG += "\" y = \"";
    currentSVG += Math.round(y).toString();
    currentSVG += "\" fill = \"" + currentStroke + "\""; 
    currentSVG += " font-size = \"";
    currentSVG += side + "px\"";
    currentSVG += " font-family = \"futura\"";
    currentSVG += ">";
    if(currentWord == "&"){
        currentWord = "&amp;";
    }
    if(currentWord == "<"){
        currentWord = "&lt;";
    }
    if(currentWord == ">"){
        currentWord = "&gt;";
    }
    currentSVG += currentWord;

    currentSVG += "</text>\n";	
    currentWord = "";
    currentHTML = "";
    //</page0365>
    }
    if(localCommand == 0366){//<page0366>
    ctx.beginPath();
    ctx.moveTo(Math.round(x),Math.round(y));
    cpx1 = Math.round(x + side*Math.cos(theta));
    cpy1 = Math.round(y + side*Math.sin(theta));
    currentSVG += "<path    d = \"M";
    currentSVG += (Math.round(x)).toString() + ",";
    currentSVG += (Math.round(y)).toString() + " C";
    currentSVG += cpx1.toString() + "," + cpy1.toString() + " ";

    //<path  d="M100,200 C150,150 200,150 250,200" />
    //</page0366>
    }
    if(localCommand == 0367){//<page0367>
    x2 = Math.round(x);
    y2 = Math.round(y);
    cpx2 = Math.round(x + side*Math.cos(theta));
    cpy2 = Math.round(y + side*Math.sin(theta));
    ctx.bezierCurveTo(cpx1,cpy1,cpx2,cpy2,x2,y2);
    ctx.stroke();
    currentSVG += cpx2.toString() + "," + cpy2.toString() + " ";
    currentSVG += x2.toString() + "," + y2.toString() + "\" fill = \"none\" stroke-width = \"2\" stroke = \"" + currentStroke + "\" />";		
    //</page0367>
    }
    
 
    if(localCommand == 06){ //<page06>
    fullCube = false;
    currentTable = []; 
    for(var index = 0;index < 01777;index ++){
        currentTable.push("");
    }
    var inputbytecode = document.getElementById("bytecodeScript").text;
    var bytecodearray = inputbytecode.split("\n");
    for(var index = 0;index < bytecodearray.length;index++){
        if(bytecodearray[index].includes(":")){
            var localBytecode = bytecodearray[index].split(":");
            var localAddress = parseInt(localBytecode[0],8);
            currentTable[localAddress] = localBytecode[1];
        }
    }
    currentTableStart = [];
    for(var index = 0;index < currentTable.length;index++){
        currentTableStart.push(currentTable[index]);
    }
    //</page06>
    }
    if(localCommand == 07){//<page07>
    //intialize
    worldLine = [];
    addressStack = [];
    worldIndex = 0;
    myFont = "Futura";
    boxFontSize = 0.2;
    viewStep = 50;
    currentURL = "";
    currentWord = "";
    currentSVG = "";
    currentHTML = "";
    currentStyle = "";
    latex = true;
    currentAddress = 0260;
    currentDeck = 0400;
    currentGlyph = "0300,";
    resetColor = "#000000";
    currentStroke = "black";
    currentFill = "black";
    currentAction = 0;
    currentCommand = "0300";
    phi = 0.5*(Math.sqrt(5) + 1);
    scaleFactor = 2;
    thetaStep = Math.PI/2;
    theta0 = -Math.PI/2; 
    theta = theta0;
    x0 = innerWidth/2;
    y0 = innerHeight/2;
    x = x0;
    y = y0;
    unit = 300;
    side = unit;
    x0 = innerWidth/2;
    y0 = innerHeight/2;
    unit = x0/8;//16 wm span total screen size
    side = unit;
    currentGlyph = "0300,0330,0341,0333,0207,0336,0341,";
    viewGlyph = "";
    x0 = 5;
    y0 = 55;
    unit = 50;
    side = unit;
    keyMode = "none";
    editMode = true;

    //</page07>
    }
    //root magic here

    if(localCommand == 010){//delete
        var bottomGlyph = currentGlyph.split("0207")[0];   
        var topGlyph = currentGlyph.split("0207")[1]; 
        glyphSplit = bottomGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length - 2;index++){
            if(glyphSplit[index].length > 0){
                currentGlyph += glyphSplit[index] + ",";
            }
        }
        currentGlyph += "0207,";
        currentGlyph += topGlyph;
        glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0){
                currentGlyph += glyphSplit[index] + ",";
            }
        }
    }    
    //<page014>
    if(localCommand == 014){//export JSON        
        if(pages[currentPage].id == "div0660"){
        }
    }
//</page014>
    if(localCommand == 015){
        currentData = JSON.parse(getJSON());
        currentDataArray[currentDataIndex] = currentData;
        document.getElementById("textIO0630").value = JSON.stringify(currentDataArray,null,"    ");
        var fileName = document.getElementById("name04xx").value;
        var saveText = "\"" + fileName + "\":" +document.getElementById("textIO0630").value;
        var httpc = new XMLHttpRequest();
        var url = "saver04xx.php";        
        httpc.open("POST", url, true);
        httpc.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        httpc.send("text=" + saveText);//send text to saver04xx.php

    }
    if(localCommand == 020){//cursor back
        var bottomGlyph = currentGlyph.split("0207")[0];   
        var topGlyph = currentGlyph.split("0207")[1]; 
        glyphSplit = bottomGlyph.split(",");
        if(bottomGlyph.length == 0){
            currentGlyph = topGlyph + "0207,";
        }
        else{
            currentGlyph = "";
            for(var index = 0;index < glyphSplit.length - 2;index++){
                if(glyphSplit[index].length > 0){
                    currentGlyph += glyphSplit[index] + ",";
                }
            }
            currentGlyph += "0207,";
            currentGlyph += glyphSplit[glyphSplit.length - 2];
            currentGlyph += topGlyph;
        }
        glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0){
                currentGlyph += glyphSplit[index] + ",";
            }
        }
    }
    if(localCommand == 021){//cursor fwd

        var bottomGlyph = currentGlyph.split("0207")[0];   
        var topGlyph = currentGlyph.split("0207")[1]; 
        if(topGlyph == ","){
            currentGlyph = "0207," + bottomGlyph;
        }
        else{
            glyphSplit = topGlyph.split(",");
            currentGlyph = bottomGlyph + ",";
            currentGlyph += glyphSplit[1] + ",";
            currentGlyph += "0207,";
            for(var index = 2;index < glyphSplit.length - 1;index++){
                if(glyphSplit[index].length > 0){
                    currentGlyph += glyphSplit[index] + ",";
                }
            }
        }
        glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0){
                currentGlyph += glyphSplit[index] + ",";
            }
        }

    }
    if(localCommand == 022){//previous glyph in table
        currentAddress--;
        currentGlyph = currentTable[currentAddress] + ",0207,";
    }
    if(localCommand == 023){//next glyph in table
        currentAddress++;
        currentGlyph = currentTable[currentAddress] + ",0207,";
    }
    if(localCommand == 026){//import hypercube
        localString = "";
        if(pages[currentPage].id == "div0660"){            
            localString = document.getElementById("textIO0660").value;
        }
        var inputStack = localString.split("\n");
        for(var index = 0;index < inputStack.length;index++){
            var stackLine = inputStack[index].split(":");
            var localAddress = parseInt(stackLine[0],8);
            var localGlyph = stackLine[1];
            currentTable[localAddress] = localGlyph;
        }
        currentGlyph = currentTable[currentAddress] + ",0207,";
    }
    if(localCommand == 027){//export hypercube
        var localString = "";
        for(var index = 0;index < currentTable.length;index++){
            if(currentTableStart[index] != currentTable[index] || fullCube){
                localString += "0" + index.toString(8) + ":" + currentTable[index] + "\n";
            }
        }
        if(pages[currentPage].id == "div0660"){
            document.getElementById("textIO0660").value = localString;
        }
    }
    if(localCommand == 030){
//<page030>
        y0 -= viewStep; 
        redraw();
//</page030>
    }
    if(localCommand == 031){
//<page031>
        y0 += viewStep; 
        redraw();
//</page031>
    }
    if(localCommand == 032){
//<page032>
        x0 -= viewStep; 
        redraw();
//</page032>
    }
    if(localCommand == 033){
//<page033>
        x0 += viewStep; 
        redraw();
//</page033>
    }
if(localCommand == 034){//previous page in worldLine
//<page034>
    worldIndex--;
    if(worldIndex <0){
        worldIndex = worldLine.length - 1;
    }
    currentURL = worldLine[worldIndex];
    fetchArray();
        
//</page034>
    }
    if(localCommand == 035){//next page in worldLine
    worldIndex++;
    if(worldIndex <worldLine.length - 1){
        worldIndex = 0;
    }
    currentURL = worldLine[worldIndex];
    fetchArray();
//<page035>
//</page035>
    }
    if(localCommand == 036){
//<page036>
        unit /= 1.1; 
        redraw();

//</page036>
    }
    if(localCommand == 037){
//<page037>
        unit *= 1.1; 
        redraw();
//</page037>
    }
    
}
</script>
<script id = "jslibrary">
 //javascript libraries //javascript libraries</script>
</head>
<body>
<div id = "page">
<a  id = "svglink" href = "svg/">SVG Feed</a>
<canvas id="invisibleCanvas" style="display:none"></canvas>
<canvas id="mainCanvas"></canvas>
<textarea id="textIO"></textarea>
<table id = "controlTable">
    <tr>
        <td>ADDRESS:</td><td><input/></td>
    </tr>
    <tr>
        <td>ACTION:</td><td><input/></td>
    </tr>
    <tr>
        <td>PRINT:</td><td><input/></td>
    </tr>
    <tr>
        <td>STACK:</td><td><input/></td>
    </tr>
</table>
<table id = "imageTable">
    <tr>
        <td>IMAGE URL:</td><td><input/></td>
    </tr>
    <tr>
        <td>IMAGE WIDTH:</td><td><input value = "2"/></td>
    </tr>
    <tr>
        <td>IMAGE TOP:</td><td><input value  = "-1"/></td>
    </tr>
    <tr>
        <td>IMAGE LEFT:</td><td><input value = "-1"/></td>
    </tr>

</table>
<table id = "buttonTable">
<tr><td class = "button" id = "savesvg">SAVE SVG</td></tr>
<tr><td class = "button" id = "loadbytecode">LOAD BYTECODE</td></tr>
<tr><td class = "button" id = "exportbytecode">EXPORT TABLE</td></tr>
</table>
<input id = "glyphspellinput"/>
<img id = "mainImage"/>
</div>
<script>
</script>
<script id = "init">
init();
function init(){
doTheThing(06);//import embedded hypercube in this .html doc
doTheThing(07);//initialize Geometron global variables
    document.getElementById("mainCanvas").width = innerWidth;
    document.getElementById("mainCanvas").height = innerHeight;

    x0 = innerWidth/2;
    y0 = innerHeight/2;    

controls = document.getElementById("controlTable").getElementsByTagName("input");   
imagedata = document.getElementById("imageTable").getElementsByTagName("input");

currentAddress = 0250;
currentGlyph = currentTable[currentAddress] + ",0207,";


unit = 100;

}
</script>
<script id = "redraw">
redraw();
function redraw(){
        var glyphArray = currentGlyph.split(",");
        currentTable[currentAddress] = "";
        for(var index = 0;index < glyphArray.length;index++){
            if(glyphArray[index] != "0207" && glyphArray[index].length > 0){
                currentTable[currentAddress] += glyphArray[index] + ",";
            }
        }

    ctx = document.getElementById("mainCanvas").getContext("2d");
    ctx.clearRect(0,0,innerWidth,innerHeight);
    doTheThing(0300);

doTheThing(0300);
drawGlyph(currentGlyph);
controls[0].value = "0" + currentAddress.toString(8);
doTheThing(0300);

x = 150;
y = innerHeight-100;
side = 25;
spellGlyph(currentGlyph);
document.getElementById("glyphspellinput").value = currentTable[currentAddress];

document.getElementById("mainImage").style.width = (parseFloat(imagedata[1].value)*unit).toString()  + "px";
document.getElementById("mainImage").style.left = (x0 + parseFloat(imagedata[3].value)*unit).toString()  + "px";
document.getElementById("mainImage").style.top = (y0 + parseFloat(imagedata[2].value)*unit).toString()  + "px";


}
</script>
<script id = "pageevents">
 document.getElementById("loadbytecode").onclick = function(){
  
    var inputbytecode = document.getElementById("textIO").value;
    var bytecodearray = inputbytecode.split("\n");
    for(var index = 0;index < bytecodearray.length;index++){
        if(bytecodearray[index].includes(":")){
            var localBytecode = bytecodearray[index].split(":");
            var localAddress = parseInt(localBytecode[0],8);
            currentTable[localAddress] = localBytecode[1];
        }
    }
    currentGlyph = currentTable[currentAddress] + ",0207,";
    redraw();
 }
 
 document.getElementById("savesvg").onclick = function(){
        currentJSON = {};
        currentJSON.glyph = currentTable[currentAddress];
        currentJSON.unit = unit;
        currentJSON.x0 = x0;
        currentJSON.y0 = y0;
        currentJSON.x0rel = (x0 - 0.5*innerWidth)/unit;
        currentJSON.y0rel = (y0 - 0.5*innerHeight)/unit;
        currentJSON.imgurl = imagedata[0].value;
        currentJSON.imgw = parseFloat(imagedata[1].value);
        currentJSON.imgleft = parseFloat(imagedata[2].value);
        currentJSON.imgtop = parseFloat(imagedata[3].value);
        currentSVG = "<svg width=\"" + innerWidth.toString() + "\" height=\"" + innerHeight.toString() + "\" viewbox = \"0 0 " + innerWidth.toString() + " " + innerHeight.toString() + "\"  xmlns=\"http://www.w3.org/2000/svg\">\n";
        currentSVG += "\n<!--\n<json>\n" + JSON.stringify(currentJSON,null,"    ") + "\n</json>\n-->\n";
        doTheThing(0300);
        drawGlyph(currentTable[currentAddress]);
        currentSVG += "</svg>";
        document.getElementById("textIO").value = currentSVG;
        var httpc = new XMLHttpRequest();
        var url = "feedsaver.php";        
        httpc.open("POST", url, true);
        httpc.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        httpc.send("data=" + encodeURIComponent(document.getElementById("textIO").value));//send text to saver.php
 }
 
 document.getElementById("exportbytecode").onclick = function(){
        var localString = "";
        for(var index = 0220;index < 0247;index++){
            localString += "0" + index.toString(8) + ":" + currentTable[index] + "\n"; 
        }
        for(var index = 01220;index < 01247;index++){
            localString += "0" + index.toString(8) + ":" + currentTable[index] + "\n"; 
        }
        document.getElementById("textIO").value = localString;

 }
 
    controls[0].onchange = function(){
        currentAddress = parseInt(this.value,8);
        currentGlyph = currentTable[currentAddress] + ",0207,";
        redraw();
    }
 controls[1].onkeydown = function(e) {
        charCode = e.keyCode || e.which;
        if(charCode == 010){
            doTheThing(010);
            redraw();
        }
        if(charCode == 045){
            doTheThing(020);
            redraw();
        }
        if(charCode == 047){
            doTheThing(021);
            redraw();
        }
        if(charCode == 046){
//        doTheThing(023);
            currentAddress++;
            currentGlyph = currentTable[currentAddress] + ",0207,";
            redraw();
        }
        if(charCode == 050){
//        doTheThing(022);
            currentAddress--;
            currentGlyph = currentTable[currentAddress] + ",0207,";
            redraw();
        }    
    }
    
    controls[2].onkeydown = function(e) {
        charCode = e.keyCode || e.which;
        if(charCode == 010){
            doTheThing(010);
            redraw();
        }
        if(charCode == 045){
            doTheThing(020);
            redraw();
        }
        if(charCode == 047){
            doTheThing(021);
            redraw();
        }
    }
    
    controls[3].onkeydown = function(e) {
        charCode = e.keyCode || e.which;
        if(charCode == 010){
            doTheThing(010);
            redraw();
        }
        if(charCode == 045){
            doTheThing(020);
            redraw();
        }
        if(charCode == 047){
            doTheThing(021);
            redraw();
        }
    }
controls[1].onkeypress = function(a){//action
        charCode = a.keyCode || a.which;
        console.log(a.which);
        if(parseInt(currentTable[charCode],8) >= 0200){
            var glyphSplit = currentGlyph.split(",");
            currentGlyph = "";
            for(var index = 0;index < glyphSplit.length;index++){
                if(glyphSplit[index].length > 0 && glyphSplit[index] != "0207"){
                    currentGlyph += glyphSplit[index] + ",";
                }
                if(glyphSplit[index] == "0207"){
                    currentGlyph += currentTable[charCode] + ",0207,";
                }
            }
            var glyphSplit = currentGlyph.split(",");
            currentGlyph = "";
            for(var index = 0;index < glyphSplit.length;index++){
                if(glyphSplit[index].length > 0  && parseInt(glyphSplit[index]) >= 040){
                    currentGlyph += glyphSplit[index] + ",";
                }
            }
            redraw();
        } 
        if(parseInt(currentTable[charCode],8) < 040){
            doTheThing(parseInt(currentTable[charCode],8));
            redraw();
        }
        this.value = "";
    }
    
    controls[2].onkeypress = function(a){//print
        charCode = a.keyCode || a.which;
        var glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0 && glyphSplit[index] != "0207"){
                currentGlyph += glyphSplit[index] + ",";
            }
            if(glyphSplit[index] == "0207"){
                currentGlyph += "0" + (charCode + 01000).toString(8) + ",0207,";
            }
        }
        var glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0  && parseInt(glyphSplit[index]) >= 040){
                currentGlyph += glyphSplit[index] + ",";
            }
        }
        redraw();
        
        this.value = "";
    }
    
     controls[3].onkeypress = function(a){//stack
        charCode = a.keyCode || a.which;    
        var glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0 && glyphSplit[index] != "0207"){
                currentGlyph += glyphSplit[index] + ",";
            }
            if(glyphSplit[index] == "0207"){
                currentGlyph += "0" + (charCode).toString(8) + ",0207,";
            }
        }
        var glyphSplit = currentGlyph.split(",");
        currentGlyph = "";
        for(var index = 0;index < glyphSplit.length;index++){
            if(glyphSplit[index].length > 0  && parseInt(glyphSplit[index]) >= 040){
                currentGlyph += glyphSplit[index] + ",";
            }
        }
        redraw();
        this.value = "";
    }
    
document.getElementById("glyphspellinput").onchange = function(){
    currentTable[currentAddress] = this.value;
    currentGlyph = currentTable[currentAddress] + "0207,";
    redraw();
}
    
imagedata[0].onchange = function(){
    document.getElementById("mainImage").src = this.value;
}
    
imagedata[1].onchange = function(){
    redraw();
}
imagedata[2].onchange = function(){
    redraw();
}
imagedata[3].onchange = function(){
    redraw();
}
</script>
<style>
 #svglink{
     position:absolute;
     left:50%;
     top:10px;
     z-index:2;
 }
 #textIO{
    position:absolute;
    width:100px;
    height:100px;
    left:0px;
    bottom:0px;
    border:solid;
}
#mainCanvas{
    position:absolute;
    left:0px;
    top:0px;
}
#controlTable{
    right:15px;
    top:15px;
}
#imageTable{
    left:15px;
    top:15px;
}
#imageTable input{
    width:5em;
    font-family:courier;
}
table{
    font-family:courier;
    font-size:18;
    position:absolute;
}
#controlTable input{
    width:3em;
    font-family:courier;
}
.button{
    padding:0.5em 0.5em 0.5em 0.5em;
    font-family:courier;
    cursor:pointer;
    border:solid;
    border-radius:0.5em;
}
.button:hover{
    background-color:green;
}
.button:active{
    background-color:yellow;
}
#keyboardlink{
    position:absolute;
    right:5%;
    bottom:5%;
}
#glyphspellinput{
    position:absolute;
    bottom:20px;
    left:150px;
    right:50px;
    font-family:courier;
    font-size:16px;
}
#buttonTable{
    position:absolute;
    left:15px;
    top:50%;
}
img{
    position:absolute;
    z-index:-2;
}
</style>
</body>
</html>